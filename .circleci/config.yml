
version: 2.1

orbs:
  docker: circleci/docker@0.5.13

commands:
  default-configuration:
    description: preparing the containers with dependencies to deploy front and back end
    steps:
      - run:
          name: Install curl, tar and gzip
          command: |
            echo installing curl, tar and gzip
            apk add --update tar gzip curl
      - run:
          name: Install ansible
          command: |
            echo Installing ansisble
            apk add --update ansible
      - run:
          name: Install nodejs and npm
          command: |
            echo installing nodejs and npm
            apk add --update nodejs npm
      - run:
          name: Install aws cli
          command: |
            echo installing awscli
            pip install awscli

jobs:
  run_tests:
    working_directory: ~/react-app
    docker:
      - image: circleci/node:14.17.6
    
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["fc:54:cd:b6:ea:2e:8f:2d:52:15:75:8b:ee:47:c1:39"]
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test

  deploy:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - default-configuration
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - attach_workspace:
          at: ~/
      - run:
          name: ansible playbook run
          command: |
            ansible-playbook -i .circleci/ansible/setup.yml
  
workflows:
  version: 2
  build_deploy:
    jobs:
      - run_tests
      - docker/publish:
          image: seandbull/$CIRCLE_PROJECT_REPONAME
          dockerfile: dockerfile
          requires:
            - run_tests
          filters:
            branches:
              only: 
                - docker
      - deploy:
          requires:
            - run_tests
          filters: 
            branches: 
              only: 
                - main

